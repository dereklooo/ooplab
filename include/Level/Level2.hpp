//
// Created by benson on 2025/3/14.
//

#ifndef LEVEL2_HPP
#define LEVEL2_HPP
#include "Level.hpp"
class Level2 final : public Level {
public:
    Level2() : Level() {
        m_Background = std::make_shared<Map>(RESOURCE_DIR "/image/Background/Level2/level_2.png",glm::vec2(-3216,768),glm::vec2(-640,360));

        m_ManagerManager = std::make_shared<ManagerManager>(Items,Blocks,Monsters,FireBalls,m_Mario,m_renderer,m_Background);

        m_ManagerManager->SetFloor(FloorBlock, FloorBlockSize);
        m_ManagerManager->SetBlock(LuckyBLock, BlockType::Lucky);
        // m_ManagerManager->SetBlock(OriginBlock, BlockType::Original);
        m_ManagerManager->SetBlock(FootBlock, BlockType::Foot);
        //
        m_ManagerManager->SetBlock(Pipe_64_64, BlockType::Pipe_64_64);
        m_ManagerManager->SetBlock(Pipe_64_96, BlockType::Pipe_64_96);
        m_ManagerManager->SetBlock(Pipe_64_128, BlockType::Pipe_64_128);
        m_ManagerManager->SetBlock(BlueFloorBlock,BlockType::Blue_Floor);
        m_ManagerManager->SetBlock(BlueOriginalBlock, BlockType::Blue_Original);
        m_ManagerManager->SetBlock(BlueOriginalBlock_Coins, BlockType::Blue_OriginalCoin);
        m_ManagerManager->SetBlock(BlueFootBLock, BlockType::Blue_Foot);
        m_ManagerManager->SetBlock(AirBlock, BlockType::Air);
        m_ManagerManager->SetBlock(Elevator_Down,BlockType::Elevator_Down);
        m_ManagerManager->SetBlock(Elevator_Up,BlockType::Elevator_Up);
        m_ManagerManager->SetBlock(HorizontalPipe_64_64,BlockType::HorizontalPipe_64_64);
        m_ManagerManager->SetBlock(LongPipe,BlockType::LongPipe);

        m_ManagerManager->SetItem(Item_Mushroom, ItemType::Item_Mushroom);
        m_ManagerManager->SetItem(Item_Coins, ItemType::Item_Coins);
        // m_ManagerManager->SetItem(Item_FireFlower, ItemType::Item_FireFlower);
        m_ManagerManager->SetItem(Item_Coin, ItemType::Item_Coin);
        m_ManagerManager->SetItem(Item_Star,ItemType::Item_Star);
        m_ManagerManager->SetItem(Item_OutSideCoin, ItemType::Item_OutSideCoin);

        // m_ManagerManager->SetBlock(Flag,BlockType::flag);
        // m_ManagerManager->SetBlock(FlagBall,BlockType::flagball);
        // m_ManagerManager->SetBlock(FlagPole,BlockType::flagpole);

        m_ManagerManager->SetAnotherMap(AnotherMapPos,NextPipePos);
    }
    void Update() override {
        if(m_Mario->GetPosition().y <= -400 && m_Mario->GetAnimating() == false) {
            this->GameOver = true;
            return;
        }
        if(Util::Input::IsKeyPressed(Util::Keycode::SPACE)) {
            std::cout<<m_Background->GetPosition().x<<std::endl;
            std::cout<<(m_Background->GetPosition().x - m_Mario->GetPosition().x) / 48<<std::endl;
            std::cout<<(m_Background->GetPosition().y - m_Mario->GetPosition().y) / 48<<std::endl;
        }
        std::vector<std::shared_ptr<Monster>> _temp;
        switch (Condition_num) {
            case 1:
                if (m_Background->GetPosition().x <= -700 && m_Background->GetPosition().x >= -750 && !m_Mario->GetAnimating()) {
                    _temp.clear();
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(490,-240),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(540,-240),Left));
                    m_ManagerManager->AddMonster(_temp,m_renderer);
                    Condition_num += 1;
                }
                break;
            case 2:
                if (m_Background->GetPosition().x <= -1000 && m_Background->GetPosition().x >= -1050) {
                    _temp.clear();
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(850,-240),Left));
                    m_ManagerManager->AddMonster(_temp,m_renderer);
                    Condition_num += 1;
                }
                break;
            case 3:
                if(m_Background->GetPosition().x <= -1900 && m_Background->GetPosition().x >= -1950) {
                    _temp.clear();
                    _temp.push_back(std::make_shared<BlueTurtle>(glm::vec2(700,-240),Left));
                    _temp.push_back(std::make_shared<BlueTurtle>(glm::vec2(760,-240),Left));
                    m_ManagerManager->AddMonster(_temp,m_renderer);
                    Condition_num += 1;
                }
                break;
            case 4:
                if(m_Background->GetPosition().x <= -2700 && m_Background->GetPosition().x >= -2750) {
                    _temp.clear();
                    _temp.push_back(std::make_shared<BlueTurtle>(glm::vec2(700,-240),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(760,-240),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(810,-240),Left));
                    m_ManagerManager->AddMonster(_temp,m_renderer);
                    Condition_num += 1;
                }
                break;
            case 5:
                if(m_Background->GetPosition().x <= -3400 && m_Background->GetPosition().x >= -3450) {
                    _temp.clear();
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(600,210),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(800,70),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(850,70),Left));
                    m_ManagerManager->AddMonster(_temp,m_renderer);
                    Condition_num += 1;
                }
                break;
            case 6:
                if(m_Background->GetPosition().x <= -4600 && m_Background->GetPosition().x >= -4650) {
                    _temp.clear();
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(700,-240),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(750,-240),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(800,-240),Left));
                    m_ManagerManager->AddMonster(_temp,m_renderer);
                    Condition_num += 1;
                }
            break;
            case 7:
                if(m_Background->GetPosition().x <= -6200 && m_Background->GetPosition().x >= -6250) {
                    _temp.clear();
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(750,-120),Left));
                    _temp.push_back(std::make_shared<Blue_Mushroom>(glm::vec2(820,-60),Left));
                    m_ManagerManager->AddMonster(_temp,m_renderer);
                    Condition_num += 1;
                }
            default:
                break;
        }

    };
private:

    std::vector<glm::vec2> FloorBlock = {{100.5,-14},{50.5f,-31},{120.5,-47},{111.5,-31}};
    std::vector<glm::vec2> FloorBlockSize = {{201.f,2.0f},{79.0f,2.0f},{18,2.0f},{37,2.0f}};
    std::vector<glm::vec2> BlueOriginalBlock_Coins = {
        {39.5,-25.5}
    };
    std::vector<glm::vec2> BlueOriginalBlock = {
    {171.5,-18.5}, {172.5,-18.5}, {173.5,-18.5}, {174.5,-18.5}, {175.5,-18.5}, {176.5,-18.5}, {177.5,-18.5}, {180.5,-18.5}, {181.5,-18.5}, {182.5,-18.5}, {183.5,-18.5}, {184.5,-18.5}, {185.5,-18.5}, {186.5,-18.5}, {187.5,-18.5}, {188.5,-18.5}, {189.5,-18.5}, {190.5,-18.5}, {191.5,-18.5}, {192.5,-18.5}, {193.5,-18.5}, {194.5,-18.5}, {195.5,-18.5}, {196.5,-18.5}, {197.5,-18.5}, {198.5,-18.5}, {200.5,-18.5}, {10.5,-19.5}, {16.5,-19.5}, {17.5,-19.5}, {18.5,-19.5}, {19.5,-19.5}, {20.5,-19.5}, {21.5,-19.5}, {22.5,-19.5}, {23.5,-19.5}, {24.5,-19.5}, {25.5,-19.5}, {26.5,-19.5}, {27.5,-19.5}, {28.5,-19.5}, {29.5,-19.5}, {30.5,-19.5}, {31.5,-19.5}, {32.5,-19.5}, {33.5,-19.5}, {34.5,-19.5}, {35.5,-19.5}, {36.5,-19.5}, {37.5,-19.5}, {38.5,-19.5}, {39.5,-19.5}, {40.5,-19.5}, {41.5,-19.5}, {42.5,-19.5}, {43.5,-19.5}, {44.5,-19.5}, {45.5,-19.5}, {46.5,-19.5}, {47.5,-19.5}, {48.5,-19.5}, {49.5,-19.5}, {50.5,-19.5}, {51.5,-19.5}, {52.5,-19.5}, {53.5,-19.5}, {54.5,-19.5}, {55.5,-19.5}, {56.5,-19.5}, {57.5,-19.5}, {58.5,-19.5}, {59.5,-19.5}, {60.5,-19.5}, {61.5,-19.5}, {62.5,-19.5}, {63.5,-19.5}, {64.5,-19.5}, {65.5,-19.5}, {66.5,-19.5}, {67.5,-19.5}, {68.5,-19.5}, {69.5,-19.5}, {70.5,-19.5}, {71.5,-19.5}, {72.5,-19.5}, {73.5,-19.5}, {74.5,-19.5}, {75.5,-19.5}, {76.5,-19.5}, {77.5,-19.5}, {78.5,-19.5}, {79.5,-19.5}, {80.5,-19.5}, {81.5,-19.5}, {82.5,-19.5}, {83.5,-19.5}, {84.5,-19.5}, {85.5,-19.5}, {86.5,-19.5}, {87.5,-19.5}, {88.5,-19.5}, {89.5,-19.5}, {90.5,-19.5}, {91.5,-19.5}, {92.5,-19.5}, {93.5,-19.5}, {94.5,-19.5}, {95.5,-19.5}, {96.5,-19.5}, {97.5,-19.5}, {98.5,-19.5}, {99.5,-19.5}, {100.5,-19.5}, {101.5,-19.5}, {102.5,-19.5}, {103.5,-19.5}, {104.5,-19.5}, {105.5,-19.5}, {106.5,-19.5}, {107.5,-19.5}, {108.5,-19.5}, {109.5,-19.5}, {110.5,-19.5}, {111.5,-19.5}, {112.5,-19.5}, {113.5,-19.5}, {114.5,-19.5}, {115.5,-19.5}, {116.5,-19.5}, {117.5,-19.5}, {118.5,-19.5}, {119.5,-19.5}, {120.5,-19.5}, {121.5,-19.5}, {122.5,-19.5}, {123.5,-19.5}, {124.5,-19.5}, {125.5,-19.5}, {126.5,-19.5}, {127.5,-19.5}, {128.5,-19.5}, {129.5,-19.5}, {130.5,-19.5}, {131.5,-19.5}, {132.5,-19.5}, {133.5,-19.5}, {134.5,-19.5}, {135.5,-19.5}, {136.5,-19.5}, {137.5,-19.5}, {138.5,-19.5}, {139.5,-19.5}, {140.5,-19.5}, {141.5,-19.5}, {142.5,-19.5}, {143.5,-19.5}, {144.5,-19.5}, {145.5,-19.5}, {146.5,-19.5}, {147.5,-19.5}, {171.5,-19.5}, {172.5,-19.5}, {173.5,-19.5}, {174.5,-19.5}, {175.5,-19.5}, {176.5,-19.5}, {177.5,-19.5}, {180.5,-19.5}, {181.5,-19.5}, {182.5,-19.5}, {183.5,-19.5}, {184.5,-19.5}, {185.5,-19.5}, {186.5,-19.5}, {187.5,-19.5}, {188.5,-19.5}, {189.5,-19.5}, {190.5,-19.5}, {191.5,-19.5}, {192.5,-19.5}, {193.5,-19.5}, {194.5,-19.5}, {195.5,-19.5}, {196.5,-19.5}, {197.5,-19.5}, {198.5,-19.5}, {200.5,-19.5}, {10.5,-20.5}, {64.5,-20.5}, {65.5,-20.5}, {68.5,-20.5}, {69.5,-20.5}, {70.5,-20.5}, {71.5,-20.5}, {72.5,-20.5}, {73.5,-20.5}, {76.5,-20.5}, {77.5,-20.5}, {78.5,-20.5}, {79.5,-20.5}, {86.5,-20.5}, {87.5,-20.5}, {88.5,-20.5}, {89.5,-20.5}, {180.5,-20.5}, {181.5,-20.5}, {182.5,-20.5}, {183.5,-20.5}, {184.5,-20.5}, {185.5,-20.5}, {186.5,-20.5}, {187.5,-20.5}, {188.5,-20.5}, {198.5,-20.5}, {200.5,-20.5}, {10.5,-21.5}, {64.5,-21.5}, {65.5,-21.5}, {68.5,-21.5}, {69.5,-21.5}, {70.5,-21.5}, {71.5,-21.5}, {72.5,-21.5}, {73.5,-21.5}, {76.5,-21.5}, {77.5,-21.5}, {78.5,-21.5}, {79.5,-21.5}, {86.5,-21.5}, {87.5,-21.5}, {88.5,-21.5}, {89.5,-21.5}, {180.5,-21.5}, {181.5,-21.5}, {182.5,-21.5}, {183.5,-21.5}, {184.5,-21.5}, {185.5,-21.5}, {186.5,-21.5}, {187.5,-21.5}, {188.5,-21.5}, {198.5,-21.5}, {200.5,-21.5}, {10.5,-22.5}, {62.5,-22.5}, {63.5,-22.5}, {72.5,-22.5}, {73.5,-22.5}, {77.5,-22.5}, {82.5,-22.5}, {83.5,-22.5}, {180.5,-22.5}, {181.5,-22.5}, {182.5,-22.5}, {183.5,-22.5}, {184.5,-22.5}, {185.5,-22.5}, {186.5,-22.5}, {187.5,-22.5}, {188.5,-22.5}, {190.5,-22.5}, {196.5,-22.5}, {198.5,-22.5}, {200.5,-22.5}, {10.5,-23.5}, {62.5,-23.5}, {63.5,-23.5}, {72.5,-23.5}, {73.5,-23.5}, {77.5,-23.5}, {82.5,-23.5}, {83.5,-23.5}, {180.5,-23.5}, {181.5,-23.5}, {182.5,-23.5}, {183.5,-23.5}, {184.5,-23.5}, {185.5,-23.5}, {186.5,-23.5}, {187.5,-23.5}, {188.5,-23.5}, {198.5,-23.5}, {200.5,-23.5}, {10.5,-24.5}, {49.5,-24.5}, {51.5,-24.5}, {52.5,-24.5}, {53.5,-24.5}, {54.5,-24.5}, {56.5,-24.5}, {62.5,-24.5}, {63.5,-24.5}, {72.5,-24.5}, {73.5,-24.5}, {77.5,-24.5}, {82.5,-24.5}, {83.5,-24.5}, {94.5,-24.5}, {95.5,-24.5}, {96.5,-24.5}, {97.5,-24.5}, {98.5,-24.5}, {99.5,-24.5}, {180.5,-24.5}, {181.5,-24.5}, {182.5,-24.5}, {183.5,-24.5}, {184.5,-24.5}, {185.5,-24.5}, {186.5,-24.5}, {187.5,-24.5}, {188.5,-24.5}, {193.5,-24.5}, {198.5,-24.5}, {200.5,-24.5}, {10.5,-25.5}, {49.5,-25.5}, {51.5,-25.5}, {54.5,-25.5}, {56.5,-25.5}, {62.5,-25.5}, {63.5,-25.5}, {68.5,-25.5}, {72.5,-25.5}, {73.5,-25.5}, {77.5,-25.5}, {79.5,-25.5}, {82.5,-25.5}, {83.5,-25.5}, {94.5,-25.5}, {95.5,-25.5}, {96.5,-25.5}, {97.5,-25.5}, {98.5,-25.5}, {99.5,-25.5}, {155.5,-25.5}, {156.5,-25.5}, {157.5,-25.5}, {158.5,-25.5}, {159.5,-25.5}, {160.5,-25.5}, {180.5,-25.5}, {181.5,-25.5}, {182.5,-25.5}, {183.5,-25.5}, {184.5,-25.5}, {185.5,-25.5}, {186.5,-25.5}, {187.5,-25.5}, {188.5,-25.5}, {193.5,-25.5}, {198.5,-25.5}, {200.5,-25.5}, {10.5,-26.5}, {49.5,-26.5}, {50.5,-26.5}, {51.5,-26.5}, {54.5,-26.5}, {55.5,-26.5}, {56.5,-26.5}, {62.5,-26.5}, {63.5,-26.5}, {64.5,-26.5}, {65.5,-26.5}, {68.5,-26.5}, {69.5,-26.5}, {70.5,-26.5}, {71.5,-26.5}, {72.5,-26.5}, {73.5,-26.5}, {77.5,-26.5}, {78.5,-26.5}, {79.5,-26.5}, {82.5,-26.5}, {83.5,-26.5}, {86.5,-26.5}, {87.5,-26.5}, {88.5,-26.5}, {89.5,-26.5}, {180.5,-26.5}, {181.5,-26.5}, {182.5,-26.5}, {183.5,-26.5}, {184.5,-26.5}, {185.5,-26.5}, {186.5,-26.5}, {187.5,-26.5}, {188.5,-26.5}, {190.5,-26.5}, {196.5,-26.5}, {198.5,-26.5}, {200.5,-26.5}, {10.5,-27.5}, {64.5,-27.5}, {65.5,-27.5}, {132.5,-27.5}, {133.5,-27.5}, {170.5,-27.5}, {171.5,-27.5}, {172.5,-27.5}, {173.5,-27.5}, {174.5,-27.5}, {175.5,-27.5}, {176.5,-27.5}, {177.5,-27.5}, {178.5,-27.5}, {179.5,-27.5}, {180.5,-27.5}, {181.5,-27.5}, {182.5,-27.5}, {183.5,-27.5}, {184.5,-27.5}, {185.5,-27.5}, {186.5,-27.5}, {187.5,-27.5}, {188.5,-27.5}, {190.5,-27.5}, {196.5,-27.5}, {198.5,-27.5}, {200.5,-27.5}, {10.5,-28.5}, {64.5,-28.5}, {65.5,-28.5}, {132.5,-28.5}, {133.5,-28.5}, {170.5,-28.5}, {171.5,-28.5}, {172.5,-28.5}, {173.5,-28.5}, {174.5,-28.5}, {175.5,-28.5}, {176.5,-28.5}, {177.5,-28.5}, {178.5,-28.5}, {179.5,-28.5}, {180.5,-28.5}, {181.5,-28.5}, {182.5,-28.5}, {183.5,-28.5}, {184.5,-28.5}, {185.5,-28.5}, {186.5,-28.5}, {187.5,-28.5}, {188.5,-28.5}, {191.5,-28.5}, {192.5,-28.5}, {193.5,-28.5}, {194.5,-28.5}, {195.5,-28.5}, {198.5,-28.5}, {200.5,-28.5}, {10.5,-29.5}, {132.5,-29.5}, {133.5,-29.5}, {170.5,-29.5}, {171.5,-29.5}, {172.5,-29.5}, {173.5,-29.5}, {174.5,-29.5}, {175.5,-29.5}, {176.5,-29.5}, {177.5,-29.5}, {178.5,-29.5}, {179.5,-29.5}, {180.5,-29.5}, {181.5,-29.5}, {182.5,-29.5}, {183.5,-29.5}, {184.5,-29.5}, {185.5,-29.5}, {186.5,-29.5}, {187.5,-29.5}, {188.5,-29.5}, {200.5,-29.5}, {111.5,-32.5}, {115.5,-32.5}, {111.5,-33.5}, {115.5,-33.5}, {111.5,-34.5}, {115.5,-34.5}, {111.5,-35.5}, {115.5,-35.5}, {116.5,-35.5}, {117.5,-35.5}, {118.5,-35.5}, {119.5,-35.5}, {120.5,-35.5}, {121.5,-35.5}, {122.5,-35.5}, {123.5,-35.5}, {124.5,-35.5}, {125.5,-35.5}, {126.5,-35.5}, {129.5,-35.5}, {111.5,-36.5}, {115.5,-36.5}, {116.5,-36.5}, {117.5,-36.5}, {118.5,-36.5}, {119.5,-36.5}, {120.5,-36.5}, {121.5,-36.5}, {122.5,-36.5}, {123.5,-36.5}, {124.5,-36.5}, {125.5,-36.5}, {126.5,-36.5}, {129.5,-36.5}, {111.5,-37.5}, {115.5,-37.5}, {116.5,-37.5}, {117.5,-37.5}, {118.5,-37.5}, {119.5,-37.5}, {120.5,-37.5}, {121.5,-37.5}, {122.5,-37.5}, {123.5,-37.5}, {124.5,-37.5}, {125.5,-37.5}, {126.5,-37.5}, {129.5,-37.5}, {111.5,-38.5}, {115.5,-38.5}, {116.5,-38.5}, {117.5,-38.5}, {118.5,-38.5}, {119.5,-38.5}, {120.5,-38.5}, {121.5,-38.5}, {122.5,-38.5}, {123.5,-38.5}, {124.5,-38.5}, {125.5,-38.5}, {126.5,-38.5}, {129.5,-38.5}, {111.5,-39.5}, {125.5,-39.5}, {126.5,-39.5}, {129.5,-39.5}, {111.5,-40.5}, {125.5,-40.5}, {126.5,-40.5}, {129.5,-40.5}, {111.5,-41.5}, {125.5,-41.5}, {126.5,-41.5}, {129.5,-41.5}, {111.5,-42.5}, {115.5,-42.5}, {116.5,-42.5}, {117.5,-42.5}, {118.5,-42.5}, {119.5,-42.5}, {120.5,-42.5}, {121.5,-42.5}, {122.5,-42.5}, {123.5,-42.5}, {124.5,-42.5}, {125.5,-42.5}, {126.5,-42.5}, {129.5,-42.5}, {111.5,-43.5}, {125.5,-43.5}, {126.5,-43.5}, {129.5,-43.5}, {111.5,-44.5}, {129.5,-44.5}, {111.5,-45.5}, {129.5,-45.5}
    };
     std::vector<glm::vec2> BlueFloorBlock = {
     {114.5,-30.5},{113.5,-30.5},{114.5,-31.5},{113.5,-31.5},{128.5,-46.5},{129.5,-46.5},{129.5,-47.5},{128.5,-47.5},{127.5,-46.5},{128.5,-46.5},{127.5,-47.5},{126.5,-47.5},{125.5,-47.5}, {132.5,-30.5}, {133.5,-30.5}, {136.5,-30.5}, {137.5,-30.5}, {138.5,-30.5}, {139.5,-30.5}, {140.5,-30.5}, {141.5,-30.5}, {142.5,-30.5}, {143.5,-30.5}, {144.5,-30.5}, {145.5,-30.5}, {146.5,-30.5}, {147.5,-30.5}, {155.5,-30.5}, {156.5,-30.5}, {157.5,-30.5}, {158.5,-30.5}, {159.5,-30.5}, {160.5,-30.5}, {161.5,-30.5}, {162.5,-30.5}, {170.5,-30.5}, {171.5,-30.5}, {172.5,-30.5}, {173.5,-30.5}, {174.5,-30.5}, {175.5,-30.5}, {176.5,-30.5}, {177.5,-30.5}, {178.5,-30.5}, {179.5,-30.5}, {180.5,-30.5}, {181.5,-30.5}, {182.5,-30.5}, {183.5,-30.5}, {184.5,-30.5}, {185.5,-30.5}, {186.5,-30.5}, {187.5,-30.5}, {188.5,-30.5}, {189.5,-30.5}, {190.5,-30.5}, {191.5,-30.5}, {192.5,-30.5}, {193.5,-30.5}, {194.5,-30.5}, {195.5,-30.5}, {196.5,-30.5}, {197.5,-30.5}, {198.5,-30.5}, {199.5,-30.5}, {200.5,-30.5},{132.5,-31.5}, {133.5,-31.5}, {136.5,-31.5}, {137.5,-31.5}, {138.5,-31.5}, {139.5,-31.5}, {140.5,-31.5}, {141.5,-31.5}, {142.5,-31.5}, {143.5,-31.5}, {144.5,-31.5}, {145.5,-31.5}, {146.5,-31.5}, {147.5,-31.5}, {155.5,-31.5}, {156.5,-31.5}, {157.5,-31.5}, {158.5,-31.5}, {159.5,-31.5}, {160.5,-31.5}, {161.5,-31.5}, {162.5,-31.5}, {170.5,-31.5}, {171.5,-31.5}, {172.5,-31.5}, {173.5,-31.5}, {174.5,-31.5}, {175.5,-31.5}, {176.5,-31.5}, {177.5,-31.5}, {178.5,-31.5}, {179.5,-31.5}, {180.5,-31.5}, {181.5,-31.5}, {182.5,-31.5}, {183.5,-31.5}, {184.5,-31.5}, {185.5,-31.5}, {186.5,-31.5}, {187.5,-31.5}, {188.5,-31.5}, {189.5,-31.5}, {190.5,-31.5}, {191.5,-31.5}, {192.5,-31.5}, {193.5,-31.5}, {194.5,-31.5}, {195.5,-31.5}, {196.5,-31.5}, {197.5,-31.5}, {198.5,-31.5}, {199.5,-31.5}, {200.5,-31.5}
    };
    std::vector<glm::vec2> BlueFootBLock = {
        {33.5,-26.5}, {35.5,-26.5}, {146.5,-26.5}, {147.5,-26.5}, {31.5,-27.5}, {33.5,-27.5}, {35.5,-27.5}, {37.5,-27.5}, {41.5,-27.5}, {145.5,-27.5}, {146.5,-27.5}, {147.5,-27.5}, {29.5,-28.5}, {31.5,-28.5}, {33.5,-28.5}, {35.5,-28.5}, {37.5,-28.5}, {41.5,-28.5}, {43.5,-28.5}, {144.5,-28.5}, {145.5,-28.5}, {146.5,-28.5}, {147.5,-28.5}, {27.5,-29.5}, {29.5,-29.5}, {31.5,-29.5}, {33.5,-29.5}, {35.5,-29.5}, {37.5,-29.5}, {41.5,-29.5}, {43.5,-29.5}, {143.5,-29.5}, {144.5,-29.5}, {145.5,-29.5}, {146.5,-29.5}, {147.5,-29.5}
    };
    std::vector<glm::vec2> LuckyBLock = {
        {20.5,-26.5}, {21.5,-26.5}, {22.5,-26.5}, {23.5,-26.5}, {24.5,-26.5}
    };
    std::vector<glm::vec2> Item_OutSideCoin = {
    {51.5,-22.5}, {52.5,-22.5}, {53.5,-22.5}, {54.5,-22.5}, {94.5,-22.5}, {95.5,-22.5}, {96.5,-22.5}, {97.5,-22.5}, {98.5,-22.5}, {99.5,-22.5}, {50.5,-25.5}, {55.5,-25.5}, {68.5,-25.5}, {69.5,-25.5}, {70.5,-25.5}, {71.5,-25.5}, {78.5,-25.5}, {116.5,-41.5}, {117.5,-41.5}, {118.5,-41.5}, {119.5,-41.5}, {120.5,-41.5}, {121.5,-41.5}, {122.5,-41.5}, {123.5,-41.5}, {115.5,-45.5}, {116.5,-45.5}, {117.5,-45.5}, {118.5,-45.5}, {119.5,-45.5}, {120.5,-45.5}, {121.5,-45.5}, {122.5,-45.5}, {123.5,-45.5}
    };
    std::vector<glm::vec2> Item_Coins = {
        {39.5,-25.5},{39.5,-25.5},{39.5,-25.5},{39.5,-25.5},{39.5,-25.5}
    };
    std::vector<glm::vec2> Item_Mushroom = {
        {20.5,-26.5}
    };
    std::vector<glm::vec2> Item_Coin = {
        {21.5,-26.5}, {22.5,-26.5}, {23.5,-26.5}, {24.5,-26.5}
    };
    std::vector<glm::vec2> Item_Star = {
        {56.5,-24.5}
    };
    std::vector<glm::vec2> FootBlock = {
        {169,-5.5} , {170,-5.5} ,
       {168,-6.5} , {169,-6.5} , {170,-6.5} ,
       {167,-7.5} , {168,-7.5} , {169,-7.5} , {170,-7.5} ,
       {166,-8.5} , {167,-8.5} , {168,-8.5} , {169,-8.5} , {170,-8.5} ,
       {165,-9.5} , {166,-9.5} , {167,-9.5} , {168,-9.5} , {169,-9.5} , {170,-9.5} ,
       {164,-10.5} , {165,-10.5} , {166,-10.5} , {167,-10.5} , {168,-10.5} , {169,-10.5} , {170,-10.5} ,
       {163,-11.5} , {164,-11.5} , {165,-11.5} , {166,-11.5} , {167,-11.5} , {168,-11.5} , {169,-11.5} , {170,-11.5} ,
       {162,-12.5} , {163,-12.5} , {164,-12.5} , {165,-12.5} , {166,-12.5} , {167,-12.5} , {168,-12.5} , {169,-12.5} , {170,-12.5}
    };
    std::vector<glm::vec2> AirBlock={
    {15.5,-2.5}, {15.5,-3.5}, {15.5,-4.5}, {15.5,-5.5}, {15.5,-6.5}, {15.5,-7.5}, {15.5,-8.5}, {15.5,-9.5}, {15.5,-10.5}, {15.5,-11.5}, {15.5,-12.5}, {15.5,-13.5}, {15.5,-14.5}
};
    std::vector<glm::vec2> Elevator_Down = {
        {152,-29} , {152,-21}
};
    std::vector<glm::vec2> Elevator_Up = {
        {166,-29} , {166,-21}
    };
    std::vector<glm::vec2> HorizontalPipe_64_64 = {
    {12.0,-12.0},{126,-45},{177,-26}
};
    std::vector<glm::vec2> Pipe_64_64 = {
        {126.0,-29},{160.5,-12}
    };
    std::vector<glm::vec2> Pipe_64_96 = {
    {114.0,-28.5}
    };

    std::vector<glm::vec2> Pipe_64_128 = {
    {14.0,-11.0} , {120.0f,-28.0f}
};

    std::vector<glm::vec2> AnotherMapPos = {
    {12.0,-12.0}, {114.0,-28.5},{126,-45},{177,-26}
};
    std::vector<glm::vec2> LongPipe = {
        {128,-40.5},{179,-23.5}
    };
    std::vector<glm::vec2> NextPipePos = {
        {0,0},{0,0},{126.0,-29},{161.0,-12.5}
    };

};
#endif //LEVEL2_HPP
